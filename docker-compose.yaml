version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.9.1
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.9.1
    depends_on:
      - zookeeper
    restart: unless-stopped
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_BROKER_ID: "1"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9092:9092"

  mongodb:
    image: mongo:latest
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  redis:
    image: redis:latest
    restart: unless-stopped
    env_file:
      - .env.redis
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  api:
    build: .
    volumes:
      - .:/app
    command: sh -c "npx wait-on tcp:kafka:9092 && npm run dev:api"
    depends_on:
      - mongodb
      - kafka
      - redis
    environment:
      - NODE_ENV=development
    ports:
      - "3000:3000"
    env_file:
      - .env

  consumer:
    build: .
    volumes:
      - .:/app
    command: sh -c "npx wait-on tcp:kafka:9092 && npm run dev:consumer"
    depends_on:
      - mongodb
      - kafka
      - redis
    environment:
      - NODE_ENV=development
    env_file:
      - .env

volumes:
  mongo-data:
  redis-data:
